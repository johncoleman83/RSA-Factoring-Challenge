#!/usr/bin/python3
from sys import argv, maxsize
from math import sqrt
from time import time
from itertools import count, islice
import multiprocessing


def is_prime(n):
    return n > 1 and all((n % i) for i in islice(count(2), int(sqrt(n) - 1)))


def factorize_prime(n):
    if is_prime(n):
        print("{:d}={:d}*{:d}".format(n, n, 1))


def factorize(start, R, n):
    """for i in range(start, sq):"""
    for i in islice(count(start), R):
        if (n % i == 0):
            print("{:d}={:d}*{:d}".format(n, int(n / i), i))
            break;

def initialize_process(n):
    SQR = int(sqrt(n)) - 1
    running = []
    running.append(multiprocessing.Process(target=factorize_prime, args=(n, )))
    running.append(multiprocessing.Process(target=factorize, args=(2, SQR, n)))
    return running


def main():
    start_t = time()
    fd = open(argv[1], 'r')
    file_lines = fd.readlines()
    fd.close()
    num_lines = len(file_lines)
    file_lines = sorted(file_lines, key=lambda x: len(x))
    running = []
    for line in file_lines:
        running.append(initialize_process(int(line)))
    for sublist in running:
        for p in sublist:
            p.start()
    for sublist in running:
        for p in sublist:
            p.join()
    end_t = time()
    print("Time to run =", (end_t - start_t))


if __name__ == "__main__":
    main()
