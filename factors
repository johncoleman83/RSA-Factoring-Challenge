#!/usr/bin/python3
from sys import argv, maxsize
"""from time import time"""
from itertools import count, islice


def is_prime(n):
    return n > 1 and all((n % i) for i in islice(count(2), int(n**0.5 - 1)))


def factors(n):
    return set(reduce(list.__add__,
                      ([i, n//i] for i in range(1, int(n**0.5) + 1)
                       if n % i == 0)))


def factorize_prime(n):
    if is_prime(n):
        print("{:d}={:d}*{:d}".format(n, n, 1))


def factorize_n(SQR, n):
    i = 2
    found = 0
    for i in range(2, SQR):
        if ((n % i) == 0):
            print("{:d}={:d}*{:d}".format(n, int(n / i), i))
            found = 1
            break
    if not found:
        print("{:d}={:d}*{:d}".format(n, n, 1))


def factorize_reverse(SQR, n):
    i = SQR
    while i > 2:
        if n % i == 0:
            print("{:d}={:d}*{:d}".format(n, i, int(n / i)))
            break


def initialize_process(n):
    SQR = int(n**0.5)
    factorize_n(SQR, n)


def main():
    """start_t = time()"""
    fd = open(argv[1], 'r')
    file_lines = fd.readlines()
    fd.close()
    num_lines = len(file_lines)
    file_lines = sorted(file_lines, key=lambda x: len(x))
    for line in file_lines:
        initialize_process(int(line))
    """end_t = time()
    print("Time to run =", (end_t - start_t))"""


if __name__ == "__main__":
    main()
